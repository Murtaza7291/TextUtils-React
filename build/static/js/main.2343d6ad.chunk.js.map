{"version":3,"sources":["components/Navbar.js","components/TextFrom.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","onClick","toggleMode","data-color","htmlFor","TextFrom","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","backgroundColor","color","heading","rows","value","onChange","event","target","toUpperCase","showAlert","toLowerCase","copy","document","getElementById","select","navigator","clipboard","writeText","length","split","defaultProps","App","setAlert","message","msg","setTimeout","_useState3","_useState4","setmode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2343d6ad.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n<div>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\"><a className=\"nav-link active\" aria-current=\"page\" href=\"/\"   >Home</a></li>\r\n                    <li className=\"nav-item\"><a className=\"nav-link\" href=\"/about\">{props.about}</a></li>    \r\n                </ul>\r\n                <form className=\"d-flex\" role=\"search\">\r\n                    <div className={`form-check form-switch text-${props.mode === \"light\"?\"dark\":\"light\"}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} data-color = \"black\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Black Dark Mode</label>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</div>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n    title : PropTypes.string,\r\n    about : PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title : \"Add title here\",\r\n    about : \"Add about us details here\"\r\n} \r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextFrom(props) {\r\n    const [text, setText] = useState(\"Enter your text here\");\r\n    // setText(\"HEllo\")\r\n    const handleOnchange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleUp = ()=>{\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Text coverted to Uppercase\" ,\"success\")\r\n    }\r\n    const handleDown = ()=>{\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Text coverted to Lowercase\" ,\"success\")\r\n    }\r\n    const clearText = ()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Text area has cleared\" ,\"success\")\r\n    }\r\n    const copyText = ()=>{\r\n        let copy = document.getElementById('exampleFormControlTextarea1');\r\n        copy.select();\r\n        navigator.clipboard.writeText(copy.value);\r\n        props.showAlert(\"Copied to clipboard\" ,\"success\")\r\n    }\r\n    return (\r\n        <>\r\n        <div className='container' style={{backgroundColor : props.mode === \"dark\"?\"black\":\"white\"}}>\r\n            <h1 style={{color : props.mode === \"dark\"?\"white\":\"black\"}}>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={text} onChange={handleOnchange} style={{backgroundColor : props.mode === \"dark\"?\"black\":\"white\",color : props.mode === \"dark\"?\"white\":\"black\"}}></textarea>\r\n                <button className='btn btn-primary my-3 mx-2' onClick={handleUp}>Convert to Uppercase</button>\r\n                <button className='btn btn-primary my-3 mx-2' onClick={handleDown}>Convert to Lowercase</button>\r\n                <button className='btn btn-primary my-3 mx-2' onClick={clearText}>Clear Text</button>\r\n                <button className='btn btn-primary my-3 mx-2' onClick={copyText}>Copy Text</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h1 style={{color : props.mode === \"dark\"?\"white\":\"black\"}}>Your text summary</h1>\r\n            <p style={{color : props.mode === \"dark\"?\"white\":\"black\"}}>{text.length == 0? text.split(\" \").length -1:text.split(\" \").length} words and {text.length} characters</p>\r\n            <p style={{color : props.mode === \"dark\"?\"white\":\"black\"}}>{0.008 * (text.split(\" \").length)} Minutes read</p>\r\n            <h2 style={{color : props.mode === \"dark\"?\"white\":\"black\"}}>Preview of your text</h2>\r\n            <p style={{color : props.mode === \"dark\"?\"white\":\"black\"}}>{text}</p>\r\n        </div>\r\n        </>\r\n  )\r\n}","import './App.css';\nimport Navbar from './components/Navbar.js';\n// import About from './components/About.js';\nimport TextFrom from './components/TextFrom.js';\n// import Alert from './components/Alert.js';\nimport React, {useState} from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App(props) {\n  const [alert,setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n      setAlert({\n          msg:message,\n          type:type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n  const [mode,setmode]= useState(\"light\");\n  const toggleMode = ()=>{\n    if(mode === \"light\"){\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode enabled\" ,\"success\")\n    }\n    else if(mode === \"dark\"){\n      setmode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Dark mode disabled\" ,\"success\")\n    }\n  }\n  return (\n    <>\n    <Navbar title = \"TextUtils\" about = \"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <TextFrom heading = \"Enter the text to analyze below\" mode={mode} showAlert = {showAlert}/>\n    {/* <About /> */}\n      {/* <Router>\n      <Navbar title = \"TextUtils\" about = \"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert = {alert}/>\n      <Routes>\n          <Route path=\"/about\"\n            element = {<About />}>\n          </Route>\n          <Route path=\"/\"\n             element = {<TextFrom heading = \"Enter the text to analyze below\" mode={mode} showAlert = {showAlert}/>}>\n          </Route>\n        </Routes>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}